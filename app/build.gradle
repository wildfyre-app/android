apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'com.github.triplet.play'

// ======================== PROJECT VERSION FROM GIT =================================

def stdout = new ByteArrayOutputStream()
exec {
    commandLine 'git', 'describe', '--tags', '--candidates=30', '--dirty=-SNAPSHOT'
    standardOutput = stdout
}
def versionN = stdout
        .toString()[1..-2]                      // Remove the \n character at the end of the command and the 'v'
        .replaceFirst("-\\d+-", "-")            // Remove the number of commits
print "Detected project version: $versionN"

def tmp = versionN.split("-", 2)[0].split("\\.", 4)
def versionC
switch(tmp.size()){
    case 1:
        versionC = tmp[0].toInteger() * 10_000
        break
    case 2:
        versionC = tmp[0].toInteger() * 10_000 + tmp[1].toInteger() * 100
        break
    case 3:
        versionC = tmp[0].toInteger() * 10_000 + tmp[1].toInteger() * 100 + tmp[2].toInteger()
        break
    default:
        throw new RuntimeException("Weird version name found : ${tmp.size()} parts; expecting 1..3")
}
println "; code: $versionC"

// ============================ LOADING KEYSTORE PROPERTIES FILE ======================

def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(file("keystore.properties")))

/**
 * To be able to push to the Console,
 * you need to create a file called 'keystore.properties' in the same dir as this file
 * and include the following:
 *
 * storeFile=THE PATH TO THE STORE (.jks), IN THE SAME DIR
 * storePassword=THE PASSWORD FOR THE STORE
 * keyAlias=THE KEY ALIAS
 * keyPassword=THE PASSWORD FOR THE KEY
 */

// ============================ PROJECT SETUP =========================================

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "net.wildfyre.client"
        minSdkVersion 20
        targetSdkVersion 28
        versionCode versionC
        versionName versionN
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        release {
            storeFile = file(keystoreProperties['storeFile'])
            storePassword = keystoreProperties['storePassword']
            keyAlias = keystoreProperties['keyAlias']
            keyPassword = keystoreProperties['keyPassword']
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support:design:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.android.support:support-vector-drawable:28.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}

play {
    track = 'beta'
    untrackOld = true
    jsonFile = file("api.json")
}
